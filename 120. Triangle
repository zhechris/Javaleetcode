class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle.size()==0)
            return 0;
        if(triangle.size()==1)
            return triangle.get(0).get(0);
        int []dp=new int[triangle.get(triangle.size()-1).size()];//last row's column
        //from bottom to top
        //initial last row
        for(int i=0;i<triangle.get(triangle.size()-1).size();i++)
        {
            dp[i]=triangle.get(triangle.size()-1).get(i);
        }
        //calculate from last-1 rows
        for(int i=triangle.size()-2;i>=0;i--)
        {
            for(int j=0;j<triangle.get(i).size();j++)
            {
                dp[j]=Math.min(dp[j], dp[j + 1])+triangle.get(i).get(j);
            }
        }
        return dp[0];
    }
}
