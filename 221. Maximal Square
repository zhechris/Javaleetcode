//dp的典型算法
class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix.length == 0)  
            return 0;  
        int max = 0;  
        int c[][] = new int[matrix.length][matrix[0].length];  
        for (int i = 0; i < matrix.length; i++) {  
            for (int j = 0; j < matrix[0].length; j++) {  
                if (matrix[i][j] == '0') {  
                    continue;  
                }  
                if (i == 0 || j == 0) {// 在边缘时  
                    c[i][j] = 1;  
                } else {  
                    c[i][j] = Math.min(c[i - 1][j - 1], Math.min(c[i - 1][j], c[i][j - 1])) + 1;  
                }  
                max = Math.max(max, c[i][j]);  
            }  
        }  
        return max * max;  
    }
}
