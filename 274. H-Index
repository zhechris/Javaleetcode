/*假设一个研究者的 h 因子为 10，则表明该研究者被引用次数大于等于 10 的文章数量也应大于等于 10。
一方面引用数引用数大于 i-1 的数量是i-1及之后的累加，必须从后往前遍历。另一方面，h 因子要求尽可能取最大值，而 h 因子最可能出现最大值的地方在后面，往前值只会越来越小，能尽快返回就尽快返回，所以一遇到 count[i] >= i 就返回。
*/
class Solution {
    public int hIndex(int[] citations) {
        int n=citations.length;
        int [] count=new int[n+1];// 对于 count[i]表示的是引用数为 i 的文章数量
        for(int c:citations){
            if(c>=n)
                count[n]++;//当引用数大于等于 n 时，我们均将其数量计入 count[n]中
            else
                count[c]++;
        }
        for(int i = n; i > 0; i--) {  //从后面开始遍历
            if(count[i] >= i) return i;
            count[i-1] += count[i];  //引用数大于 i-1 的数量是i-1及之后的累加
        }
        return 0;
    }
}
