public class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==0)
            return 0;
        int count=1;
        for(int i=1;i<nums.length;i++)
        {
            if(nums[i]==nums[i-1])
                continue;
            else
            {
                nums[count]=nums[i];//重复的向前平移
                count++;
            }
        }
         return count;   
    }
}
拿到题目思考边界条件 然后考虑普遍情况

class Solution {
    public int removeDuplicates(int[] nums) {
        List<Integer> list = new ArrayList<Integer>();
        for (int i=0; i<nums.length; i++) {
            if(!list.contains(nums[i])) {
                list.add(nums[i]);
            }
        }
        for(int i=0;i<list.size();i++)//这道题有个坑就是只能截取原来数组的前length个，所以要赋值过去
        {
            nums[i]=list.get(i);
        }
        return list.size();
    }
}
