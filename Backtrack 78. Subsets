class Solution {
    public List<List<Integer>> subsets(int[] nums) {
      List<List<Integer>> res = new ArrayList<>();
        int n=nums.length;
        if(n <= 0)
            return res;
        List<Integer> item = new ArrayList<>();    
        dfs(0,0,item, res,nums);
        return res;
    }
    private void dfs( int k, int start, List<Integer> item, List<List<Integer>> res,int []nums){
        if(item.size()==k){
            res.add(new ArrayList<Integer>(item));
        }
        for(int i=start;i<nums.length;i++){
            item.add(nums[i]);
            dfs(k+1,i+1,item,res,nums);
            item.remove(item.size()-1);
        }  
    }
}
