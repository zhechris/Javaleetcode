class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
/*To solve this problem, we need to understand and use the following 2 facts:
1) if the sum of gas >= the sum of cost, then the circle can be completed.
2) if A can not reach C in a the sequence of A-->B-->C, then B can not make it either.
If gas[A] < cost[A], then A can not even reach B. 
So to reach C from A, gas[A] must >= cost[A]. 
Given that A can not reach C, we have gas[A] + gas[B] < cost[A] + cost[B],
and gas[A] >= cost[A],
Therefore, gas[B] < cost[B], i.e., B can not reach C. */
        // 记录访问的起始点  
        int start = 0;  
        // 加的气和消耗的气的总差值(从0开始)  
        int total = 0;  
        // 从start位置开始，加的气和消耗的气的总差值  
        int sum = 0;  
        for (int i = 0; i < gas.length; i++)
        {  
            int dif = gas[i] - cost[i];  
            sum += dif;  
            total += dif;  
            // 走到i站是负数，说明走不到i站，  
            // 也不能选取起始站到i站中的任何一战  
            if (sum < 0) 
            {  
                sum = 0;  
                // 下一站作为起始点  
                start = i + 1;  
            }  
        }  
        return total >= 0 ? start : -1;  //if total<0,never circle
    }
}
