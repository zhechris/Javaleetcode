/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null||head.next==null)
            return head;
        ListNode slow=head;
        ListNode fast=head;
        ListNode slowend=head;
        
        while(fast!=null&&fast.next!=null)//cut list into two list
        {
            slowend=slow;
            slow=slow.next;
            fast=fast.next.next;
        }
        
        slowend.next=null;
        ListNode h1=sortList(head);
        ListNode h2=sortList(slow);
        return merge(h1,h2);
    }
    public ListNode merge(ListNode h1,ListNode h2){        //合并两个链表
        if(h1==null) return h2;
        if(h2==null) return h1;
        if(h1.val<h2.val)
        {
            h1.next=merge(h1.next, h2);
            return h1;
        }
        else
        {
            h2.next=merge(h1, h2.next);
            return h2;
        }                   
    }
}
