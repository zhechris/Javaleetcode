********************************************
//最常规的方法，扫描两遍
class Solution {
    public void sortColors(int[] nums) {
        int i = 0;
        int j = 0;
        int k = 0;
        int n=nums.length;
        for(int p = 0; p < n; p ++)
        {
            if(nums[p] == 0)
            {
                i ++;
            }
            else if(nums[p] == 1)
            {
                j ++;
            }
            else
                k ++;
        }
        for(int p = 0; p < n; p ++)
        {
            if(p < i)
                nums[p] = 0;
            else if(p >= i && p < i + j)
                nums[p] = 1;
            else
                nums[p] = 2;
        }
    }
}
*********************************************
//nb的方法，平移插入
class Solution {
    public void sortColors(int[] nums) {
        int i = -1;
        int j = -1;
        int k = -1;
        int n=nums.length;
        for(int p = 0; p < n; p ++)
        {
            //根据第i个数字，挪动0~i-1串。
            if(nums[p] == 0)
            {
                nums[++k] = 2;    //2往后挪
                nums[++j] = 1;    //1往后挪
                nums[++i] = 0;    //0往后挪
            }
            else if(nums[p] == 1)
            {
                nums[++k] = 2;
                nums[++j] = 1;
            }
            else
                nums[++k] = 2;
        }
    }
}
