class MyQueue {
    Stack<Integer> stack1=new Stack<>();
	Stack<Integer> stack2=new Stack<>();
    /** Initialize your data structure here. */
    public MyQueue() {
        
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
       while(!stack1.isEmpty())
    	{
    		stack2.push(stack1.pop());//看起来多此一举，实则为了以后pop和peek操作，不然其实stack不为空，只不过stack1为空了
    	}
    	stack2.push(x);
    	while(!stack2.isEmpty())
    	{
    		stack1.push(stack2.pop());
    	}
        
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        return stack1.pop();
    }
    
    /** Get the front element. */
    public int peek() {
        return stack1.peek();
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return stack1.isEmpty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
